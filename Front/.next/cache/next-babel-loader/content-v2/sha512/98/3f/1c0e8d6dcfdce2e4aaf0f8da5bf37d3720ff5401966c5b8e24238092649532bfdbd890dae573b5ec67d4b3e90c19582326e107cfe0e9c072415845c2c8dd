{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Axel\\\\Documents\\\\ESIEE\\\\Architecture\\\\DoesThisPersonExist\\\\Front\\\\components\\\\identification.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Alert } from \"../node_modules/react-bootstrap\";\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\n\nvar Identification = function Identification(props) {\n  _s();\n\n  var islogged = props.islogged; //savoir si le mec est loggé\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isRedirected = _useState[0],\n      setIsRedirected = _useState[1];\n\n  useEffect(function () {\n    if (!islogged && router.pathname !== \"/\" && router.pathname !== \"/login\" && router.pathname !== \"/sign-up\") {\n      router.push('/');\n      setIsRedirected(true);\n    } else if (islogged && (router.pathname == \"/\" || router.pathname == \"/login\" && router.pathname == \"/sign-up\")) {\n      router.push('/profil');\n    }\n  }, [router.pathname]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isRedirected && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Please login or signup before accessing the game !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Identification, \"XIe9P8RkpHY0bU8QW38jzcK2LsU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Identification;\nexport default Identification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Identification\");","map":{"version":3,"sources":["C:/Users/Axel/Documents/ESIEE/Architecture/DoesThisPersonExist/Front/components/identification.jsx"],"names":["Alert","useRouter","useEffect","useState","Identification","props","islogged","router","isRedirected","setIsRedirected","pathname","push"],"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,iCAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAAA,MACtBC,QADsB,GACTD,KADS,CACtBC,QADsB,EACF;;AAC5B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AAF8B,kBAGUE,QAAQ,CAAC,KAAD,CAHlB;AAAA,MAGvBK,YAHuB;AAAA,MAGTC,eAHS;;AAK9BP,EAAAA,SAAS,CAAC,YAAI;AACV,QAAG,CAACI,QAAD,IAAcC,MAAM,CAACG,QAAP,KAAoB,GAApB,IAA2BH,MAAM,CAACG,QAAP,KAAoB,QAA/C,IAA2DH,MAAM,CAACG,QAAP,KAAoB,UAAhG,EAA4G;AACxGH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAHD,MAIK,IAAGH,QAAQ,KAAKC,MAAM,CAACG,QAAP,IAAmB,GAAnB,IAA0BH,MAAM,CAACG,QAAP,IAAmB,QAAnB,IAA+BH,MAAM,CAACG,QAAP,IAAmB,UAAjF,CAAX,EAAwG;AACzGH,MAAAA,MAAM,CAACI,IAAP,CAAY,SAAZ;AACH;AACJ,GARQ,EAQN,CAACJ,MAAM,CAACG,QAAR,CARM,CAAT;AAUI,sBACI;AAAA,cAEIF,YAAY,iBACZ,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,mBADJ;AAUP,CAzBD;;GAAMJ,c;UAEaH,S;;;KAFbG,c;AA0BN,eAAeA,cAAf","sourcesContent":["import { Alert } from \"../node_modules/react-bootstrap\";\r\nimport { useRouter } from 'next/router'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst Identification = (props) => {\r\n    const { islogged } = props; //savoir si le mec est loggé\r\n    const router = useRouter()\r\n    const [isRedirected, setIsRedirected] = useState(false)\r\n   \r\n    useEffect(()=>{\r\n        if(!islogged && (router.pathname !== \"/\" && router.pathname !== \"/login\" && router.pathname !== \"/sign-up\")){\r\n            router.push('/')\r\n            setIsRedirected(true)\r\n        }\r\n        else if(islogged && (router.pathname == \"/\" || router.pathname == \"/login\" && router.pathname == \"/sign-up\")){\r\n            router.push('/profil')\r\n        }\r\n    }, [router.pathname])\r\n\r\n        return (\r\n            <>\r\n            {\r\n                isRedirected && \r\n                <Alert variant=\"danger\">\r\n                    Please login or signup before accessing the game !\r\n                </Alert>\r\n            }\r\n            </>\r\n        );\r\n}\r\nexport default Identification;"]},"metadata":{},"sourceType":"module"}